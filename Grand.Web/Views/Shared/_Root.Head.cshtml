@inject CommonSettings commonSettings
@inject SeoSettings seoSettings
@inject StoreInformationSettings storeInformationSettings
@{
    var displayMiniProfiler = storeInformationSettings.DisplayMiniProfilerInPublicStore;
    //X-UA-Compatible tag
    if (commonSettings.RenderXuaCompatible)
    {
        Html.AppendHeadCustomParts(string.Format("<meta http-equiv=\"X-UA-Compatible\" content=\"{0}\">", commonSettings.XuaCompatibleValue));
    }
    //custom tag(s);
    if (!string.IsNullOrEmpty(seoSettings.CustomHeadTags))
    {
        Html.AppendHeadCustomParts(seoSettings.CustomHeadTags);
    }
}
<!DOCTYPE html>
<html lang="@(this.WorkingLanguage())" @(this.ShouldUseRtlTheme() ? Html.Raw("dir=\"rtl\"") : null)>
<head>
    <title>@Html.GrandTitle(true)</title>
    <meta charset="utf-8">
    <meta name="description" content="@(Html.GrandMetaDescription())">
    <meta name="keywords" content="@(Html.GrandMetaKeywords())">
    <meta name="generator" content="grandnode">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
    @*<link rel="manifest" href="/manifest.webmanifest" />*@
    @Html.GrandHeadCustom()
    @*This is used so that themes can inject content into the header*@
    <partial name="Head" />
    @await Component.InvokeAsync("Widget", new { widgetZone = "head_html_tag" })
    @Html.GrandCssFiles(this.Url, ResourceLocation.Head)
    @Html.GrandScripts(this.Url, ResourceLocation.Head)
    @Html.GrandCanonicalUrls()
    @await Component.InvokeAsync("NewsRssHeaderLink")
    @await Component.InvokeAsync("BlogRssHeaderLink")
    @*Favicon - upload favicon.ico file to the root directory*@
    @await Component.InvokeAsync("Favicon")
    @if (displayMiniProfiler)
    {
        <mini-profiler />
    }
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-136840213-1"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'UA-136840213-1');
    </script>
    <!-- Facebook Pixel Code -->
    <script>
        !function (f, b, e, v, n, t, s) {
            if (f.fbq) return; n = f.fbq = function () {
                n.callMethod ?
                n.callMethod.apply(n, arguments) : n.queue.push(arguments)
            };
            if (!f._fbq) f._fbq = n; n.push = n; n.loaded = !0; n.version = '2.0';
            n.queue = []; t = b.createElement(e); t.async = !0;
            t.src = v; s = b.getElementsByTagName(e)[0];
            s.parentNode.insertBefore(t, s)
        }(window, document, 'script',
            'https://connect.facebook.net/en_US/fbevents.js');
        fbq('init', '1029691540759537');
        fbq('track', 'PageView');
    </script>
    <noscript>
        <img height="1" width="1" style="display:none"
             src="https://www.facebook.com/tr?id=1029691540759537&ev=PageView&noscript=1" />
    </noscript>
    <!-- End Facebook Pixel Code -->
</head>
<body>
    <resources asp-type="ScriptHeader" />
    @RenderBody()
    @Html.GrandCssFiles(this.Url, ResourceLocation.Footer)
    @Html.GrandScripts(this.Url, ResourceLocation.Footer)
    <resources asp-type="ScriptFooter" />
</body>
</html>
